2019-05-09 18:24:00,171 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:74]
2019-05-09 18:26:41,536 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:74]
2019-05-09 18:36:24,723 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:74]
2019-05-09 21:59:48,515 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:74]
2019-05-09 22:09:54,644 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:74]
2019-05-09 22:55:14,623 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:79]
2019-05-09 23:07:40,412 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:79]
2019-05-10 12:28:09,251 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:79]
2019-05-10 12:30:55,967 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:79]
2019-05-10 12:31:04,026 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:79]
2019-05-10 13:35:06,293 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:79]
2019-05-10 13:35:24,676 ERROR: Exception on /search [GET] [in c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py:1761]
Traceback (most recent call last):
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\sql\elements.py", line 708, in comparator
    comparator_factory = self.type.comparator_factory
AttributeError: 'NoneType' object has no attribute 'comparator_factory'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask_login\utils.py", line 261, in decorated_view
    return func(*args, **kwargs)
  File "C:\Users\Jager\Flask\microblog\app\main\routes.py", line 143, in search
    current_app.config['POSTS_PER_PAGE'])
  File "C:\Users\Jager\Flask\microblog\app\models.py", line 97, in search
    db.case(when, value=cls.id)), total
  File "<string>", line 2, in order_by
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\orm\base.py", line 220, in generate
    fn(self, *args[1:], **kw)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\orm\query.py", line 1817, in order_by
    criterion = self._adapt_col_list(criterion)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\orm\query.py", line 315, in _adapt_col_list
    for o in cols
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\orm\query.py", line 315, in <listcomp>
    for o in cols
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\sql\elements.py", line 4425, in _literal_as_label_reference
    elif hasattr(element, "__clause_element__"):
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\sql\elements.py", line 719, in __getattr__
    return getattr(self.comparator, key)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 855, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\sqlalchemy\sql\elements.py", line 712, in comparator
    "is not a TypeEngine class or object" % self.type
TypeError: Object None associated with '.type' attribute is not a TypeEngine class or object
2019-05-10 13:35:31,675 ERROR: Exception on /search [GET] [in c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py:1761]
Traceback (most recent call last):
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask_login\utils.py", line 261, in decorated_view
    return func(*args, **kwargs)
  File "C:\Users\Jager\Flask\microblog\app\main\routes.py", line 145, in search
    if total > page * current_app.config['POSTS_PER_PAGE'] else None
TypeError: '>' not supported between instances of 'dict' and 'int'
2019-05-10 13:35:33,559 ERROR: Exception on /search [GET] [in c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py:1761]
Traceback (most recent call last):
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask_login\utils.py", line 261, in decorated_view
    return func(*args, **kwargs)
  File "C:\Users\Jager\Flask\microblog\app\main\routes.py", line 145, in search
    if total > page * current_app.config['POSTS_PER_PAGE'] else None
TypeError: '>' not supported between instances of 'dict' and 'int'
2019-05-10 13:35:47,546 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:79]
2019-05-10 13:35:50,308 ERROR: Exception on /search [GET] [in c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py:1761]
Traceback (most recent call last):
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask\app.py", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "c:\users\jager\flask\microblog\myenv\lib\site-packages\flask_login\utils.py", line 261, in decorated_view
    return func(*args, **kwargs)
  File "C:\Users\Jager\Flask\microblog\app\main\routes.py", line 145, in search
    if total > page * current_app.config['POSTS_PER_PAGE'] else None
TypeError: '>' not supported between instances of 'dict' and 'int'
2019-05-10 13:42:22,842 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:79]
2019-05-10 14:10:28,572 INFO: Microblog startup [in C:\Users\Jager\Flask\microblog\app\__init__.py:77]
